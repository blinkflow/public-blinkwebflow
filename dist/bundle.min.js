(()=>{var t={65:function(t,e,n){var r,i;!function(){"use strict";r=function(){var t=function(){},e="undefined",n=typeof window!==e&&typeof window.navigator!==e&&/Trident\/|MSIE /.test(window.navigator.userAgent),r=["trace","debug","info","warn","error"],i={},a=null;function o(t,e){var n=t[e];if("function"==typeof n.bind)return n.bind(t);try{return Function.prototype.bind.call(n,t)}catch(e){return function(){return Function.prototype.apply.apply(n,[t,arguments])}}}function s(){console.log&&(console.log.apply?console.log.apply(console,arguments):Function.prototype.apply.apply(console.log,[console,arguments])),console.trace&&console.trace()}function c(r){return"debug"===r&&(r="log"),typeof console!==e&&("trace"===r&&n?s:void 0!==console[r]?o(console,r):void 0!==console.log?o(console,"log"):t)}function d(){for(var n=this.getLevel(),i=0;i<r.length;i++){var a=r[i];this[a]=i<n?t:this.methodFactory(a,n,this.name)}if(this.log=this.debug,typeof console===e&&n<this.levels.SILENT)return"No console available for logging"}function l(t){return function(){typeof console!==e&&(d.call(this),this[t].apply(this,arguments))}}function u(t,e,n){return c(t)||l.apply(this,arguments)}function h(t,n){var o,s,c,l=this,h="loglevel";function p(t){var n=(r[t]||"silent").toUpperCase();if(typeof window!==e&&h){try{return void(window.localStorage[h]=n)}catch(t){}try{window.document.cookie=encodeURIComponent(h)+"="+n+";"}catch(t){}}}function m(){var t;if(typeof window!==e&&h){try{t=window.localStorage[h]}catch(t){}if(typeof t===e)try{var n=window.document.cookie,r=encodeURIComponent(h),i=n.indexOf(r+"=");-1!==i&&(t=/^([^;]+)/.exec(n.slice(i+r.length+1))[1])}catch(t){}return void 0===l.levels[t]&&(t=void 0),t}}function f(){if(typeof window!==e&&h){try{window.localStorage.removeItem(h)}catch(t){}try{window.document.cookie=encodeURIComponent(h)+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC"}catch(t){}}}function y(t){var e=t;if("string"==typeof e&&void 0!==l.levels[e.toUpperCase()]&&(e=l.levels[e.toUpperCase()]),"number"==typeof e&&e>=0&&e<=l.levels.SILENT)return e;throw new TypeError("log.setLevel() called with invalid level: "+t)}"string"==typeof t?h+=":"+t:"symbol"==typeof t&&(h=void 0),l.name=t,l.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},l.methodFactory=n||u,l.getLevel=function(){return null!=c?c:null!=s?s:o},l.setLevel=function(t,e){return c=y(t),!1!==e&&p(c),d.call(l)},l.setDefaultLevel=function(t){s=y(t),m()||l.setLevel(t,!1)},l.resetLevel=function(){c=null,f(),d.call(l)},l.enableAll=function(t){l.setLevel(l.levels.TRACE,t)},l.disableAll=function(t){l.setLevel(l.levels.SILENT,t)},l.rebuild=function(){if(a!==l&&(o=y(a.getLevel())),d.call(l),a===l)for(var t in i)i[t].rebuild()},o=y(a?a.getLevel():"WARN");var g=m();null!=g&&(c=y(g)),d.call(l)}(a=new h).getLogger=function(t){if("symbol"!=typeof t&&"string"!=typeof t||""===t)throw new TypeError("You must supply a name when creating a logger.");var e=i[t];return e||(e=i[t]=new h(t,a.methodFactory)),e};var p=typeof window!==e?window.log:void 0;return a.noConflict=function(){return typeof window!==e&&window.log===a&&(window.log=p),a},a.getLoggers=function(){return i},a.default=a,a},void 0===(i="function"==typeof r?r.call(e,n,e,t):r)||(t.exports=i)}()}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={exports:{}};return t[r].call(a.exports,a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";class t{product;container;constructor(t,e){this.product=t,this.container=e}}function e(t,e,n="{{amount}}{{currency_code}}"){let r=n||"${{amount}}";return r=r.replace("{{amount}}",parseFloat(`${t}`).toFixed(2)),r=r.replace("{{currency_code}}",e||""),r}function r(t,e){const n=new CustomEvent("blink:"+t,{detail:e});document.dispatchEvent(n)}function i(t,e){const n=t=>{e(t.detail)};return document.addEventListener("blink:"+t,n),()=>document.removeEventListener("blink:"+t,n)}class a extends t{moneyFormat;constructor(t,e,n){super(t,e),this.moneyFormat=n,i("product:variant-change",(t=>{t?.productId===this.product.id&&this.render()}))}render(){const t=this.product.selectedVariant;t.compareAtPrice&&t.compareAtPrice.amount?(this.container.textContent=e(t.compareAtPrice.amount,t.compareAtPrice.currencyCode,this.moneyFormat),this.container.style.display=""):this.container.style.display="none"}}var o=n(65);const s=n.n(o)().noConflict(),c=s.methodFactory;s.methodFactory=function(t,e,n){const r=c(t,e,n);return function(...t){r("[Blink]",...t)}},s.setLevel(s.getLevel());class d extends t{optionName;nameElement;valuesContainer;templateElement;valueElements=[];selectedOption;isFirstRender=!0;productOption=null;constructor(t,e){super(t,e),this.optionName=this.extractOptionName(e),this.selectedOption=this.getInitialSelectedOption(),this.nameElement=e.querySelector("[data-bf-product-option-name]"),this.valuesContainer=this.getValuesContainer(e),this.templateElement=this.createTemplateElement(e),this.productOption=this.getProductOption(),this.templateElement&&this.setupEventListeners()}extractOptionName(t){return t.dataset.bfProductOptionName||""}getInitialSelectedOption(){return this.product.selectedVariant.selectedOptions.find((t=>t.name===this.optionName))?.value||""}getValuesContainer(t){return t.querySelector("[data-bf-product-option-values-container]")??t}createTemplateElement(t){const e=t.querySelector("[data-bf-product-option-value]");return e?(e.classList.remove("bf-selected","bf-unavailable"),e.cloneNode(!0)):(s.error('No option value template found. Please add an element with the attribute "data-bf-product-option-value" inside the option container.'),null)}setupEventListeners(){i("product:variant-change",(t=>{t?.productId===this.product.id&&this.handleVariantChange()}))}handleVariantChange(){const t=this.product.selectedVariant.selectedOptions.find((t=>t.name===this.optionName))?.value;t&&t!==this.selectedOption&&(this.selectedOption=t,this.render())}render(){this.isValidOption()&&1!==this.product.details.variants.edges.length?(this.showContainer(),this.renderOptionName(),this.productOption?(this.isFirstRender&&(this.clearExistingValues(),this.renderOptionValues(),this.isFirstRender=!1),this.updateSelectedStates()):this.hideContainer()):this.hideContainer()}isValidOption(){return!!this.optionName&&"{{ Connect Your Shopify Product Option Name }}"!==this.optionName}hideContainer(){this.container.style.display="none"}showContainer(){this.container.style.display=""}renderOptionName(){this.nameElement&&(this.nameElement.textContent=this.optionName)}getProductOption(){const t=this.product.details.options.find((t=>t.name.toLowerCase()===this.optionName.toLowerCase()));return t||(s.error(`Option with name "${this.optionName}" not found in product options.`),null)}clearExistingValues(){this.valuesContainer.querySelectorAll("[data-bf-product-option-value]").forEach((t=>{t.remove()}))}renderOptionValues(){if(!this.templateElement)return s.error("Template element not found for option values."),void this.hideContainer();this.valueElements=this.productOption.optionValues.map((t=>this.createValueElement(t)))}createValueElement(t){const e=this.templateElement.cloneNode(!0);return this.setElementAttributes(e,t),this.renderValueImage(e,t),this.renderValueColor(e,t),this.renderValueText(e,t),this.attachClickHandler(e,t),this.valuesContainer.appendChild(e),e}getOptionAvailability(t){return this.product.details.variants.edges.some((e=>{const n=e.node;return!!n.selectedOptions.some((e=>e.name===this.optionName&&e.value===t.name))&&!!n.availableForSale}))}setElementAttributes(t,e){t.setAttribute("data-option-value",e.name),t.setAttribute("data-option-name",this.optionName)}renderValueImage(t,e){const n=t.querySelector("[data-bf-product-option-value-image]");if(n)if(e.swatch?.image){const t=n.querySelector("img")||document.createElement("img");t.src=e.swatch.image.previewImage.url,t.alt=e.swatch.image.alt||e.name,n.querySelector("img")||n.appendChild(t),n.style.display=""}else n.style.display="none"}renderValueColor(t,e){const n=t.querySelector("[data-bf-product-option-value-color]");n&&(e.swatch?.color&&!e.swatch?.image?(n.style.backgroundColor=e.swatch.color,n.style.display=""):n.style.display="none")}renderValueText(t,e){const n=t.querySelector("[data-bf-product-option-value-text]");n&&(n.textContent=e.name,n.style.display="")}attachClickHandler(t,e){t.addEventListener("click",(n=>{n.preventDefault(),this.handleOptionClick(t,e)}))}handleOptionClick(t,e){this.selectedOption=e.name,this.updateSelectedState(t);const n=this.findMatchingVariant();this.product.selectVariant(n.id),this.publishOptionChangeEvent()}updateSelectedState(t){this.valueElements.forEach((t=>t.classList.remove("bf-selected"))),t.classList.add("bf-selected")}updateSelectedStates(){this.valueElements.forEach((t=>{const e=t.getAttribute("data-option-value");e===this.selectedOption?t.classList.add("bf-selected"):t.classList.remove("bf-selected");const n=this.productOption?.optionValues.find((t=>t.name===e));!!n&&this.getOptionAvailability(n)?t.classList.remove("bf-unavailable"):t.classList.add("bf-unavailable")}))}publishOptionChangeEvent(){r("product:option-change",{option:this.selectedOption,optionName:this.optionName,productId:this.product.details.id})}findMatchingVariant(){const t=this.buildSelectedOptionsMap();return this.product.details.variants.edges.find((e=>e.node.selectedOptions.every((e=>t[e.name]===e.value))))?.node||this.product.details.variants.edges[0].node}buildSelectedOptionsMap(){const t=this.product.selectedVariant.selectedOptions.reduce(((t,e)=>(t[e.name]=e.value,t)),{});return t[this.optionName]=this.selectedOption,t}}class l extends t{constructor(t,e){super(t,e)}render(){this.container.innerHTML=this.product.details.descriptionHtml}}class u extends t{defaultContent;constructor(t,e){super(t,e),this.defaultContent=e.innerHTML,this.container.addEventListener("click",this.addToCart.bind(this)),i("product:variant-change",(t=>{t?.productId===this.product.id&&this.render()}))}render(){const t=this.product.selectedVariant;t&&t.availableForSale?(this.container.removeAttribute("disabled"),this.container.innerHTML=this.defaultContent):(this.container.setAttribute("disabled","true"),this.container.textContent="Sold Out")}async addToCart(t){if(t.preventDefault(),this.product.selectedVariant&&this.product.selectedVariant.availableForSale){this.container.innerHTML='\n<svg class="bf-loader-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n<circle cx="12" cy="12" r="10" stroke-opacity="0.2"/>\n<path d="M22 12a10 10 0 0 1-10 10" />\n<style>\n\t\t.bf-loader-svg { animation: bf-rotate 1s linear infinite; vertical-align: middle;}\n\t\t@keyframes bf-rotate { 100% { transform: rotate(360deg); } }\n</style>\n</svg>\n',this.container.setAttribute("disabled","true");try{await this.product.addToCart(),this.container.innerHTML='\n<svg class="bf-check-svg" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n<path d="M20 6 9 17l-5-5"/>\n</svg>\n',setTimeout((()=>{this.render()}),2e3)}catch(t){this.container.textContent="Error. Try Again"}this.container.removeAttribute("disabled")}}}class h extends t{currentIndex=0;sliderElement;thumbnailsWrapper;nextButton;prevButton;activeImageTemplate=null;thumbnailTemplate=null;thumbnails=[];imageElements=[];constructor(t,e){super(t,e),this.sliderElement=this.getSliderElement(),this.thumbnailsWrapper=this.getThumbnailsWrapper(),this.nextButton=this.container.querySelector("[data-bf-image-slider-arrow-right]"),this.prevButton=this.container.querySelector("[data-bf-image-slider-arrow-left]"),this.activeImageTemplate=this.createTemplateElement(),this.thumbnailTemplate=this.createThumbnailTemplate(),this.activeImageTemplate&&this.setupEventListeners()}getSliderElement(){const t=this.container.querySelector("[data-bf-product-image-slider]");if(!t)throw s.error("Slider element not found");return t}getThumbnailsWrapper(){const t=this.container.querySelector("[data-bf-thumbnail-wrapper]");return t||(s.error("Thumbnails wrapper element not found"),null)}createTemplateElement(){const t=this.sliderElement.querySelector("[data-bf-product-image]");return t?(t.style.display="none",t.cloneNode(!0)):(s.error('No product image template found. Please add an element with the attribute "data-bf-product-image" inside the slider container.'),null)}createThumbnailTemplate(){if(!this.thumbnailsWrapper)return null;const t=this.thumbnailsWrapper.querySelector("[data-bf-thumbnail-image]");return t?t.cloneNode(!0):null}setupEventListeners(){i("product:variant-change",(t=>{t?.productId===this.product.id&&this.handleVariantChange()}))}handleVariantChange(){const t=this.product.selectedVariant.image?.id;if(!t)return;const e=this.product.details.images.edges.findIndex((e=>e.node.id===t));-1!==e&&this.updateActiveImage(e)}render(){const t=this.product.details.images.edges.map((t=>t.node));0!==t.length?(this.container.style.display="",this.renderSlider(t),this.renderThumbnails(t),this.setupNavigationButtons(t.length)):this.container.style.display="none"}setupNavigationButtons(t){this.nextButton&&(this.nextButton.style.display=t>1?"":"none",this.nextButton.onclick=e=>{e.preventDefault();const n=(this.currentIndex+1)%t;this.updateActiveImage(n)}),this.prevButton&&(this.prevButton.style.display=t>1?"":"none",this.prevButton.onclick=e=>{e.preventDefault();const n=(this.currentIndex-1+t)%t;this.updateActiveImage(n)})}renderSlider(t){this.activeImageTemplate&&(this.sliderElement.querySelectorAll("[data-bf-product-image]").forEach((t=>{t.remove()})),this.imageElements=t.map(((t,e)=>{const n=this.activeImageTemplate.cloneNode(!0);let r="IMG"==n.tagName?n:n.querySelector("img");return r||(r=document.createElement("img"),n.appendChild(r)),r.src=t.src,r.alt=t.altText||`Product Image ${e+1}`,this.currentIndex===e&&(n.style.display=""),n.setAttribute("data-image-id",t.id),this.sliderElement.appendChild(n),n})))}renderThumbnails(t){this.thumbnailsWrapper&&(this.thumbnailTemplate?(this.thumbnailsWrapper.querySelectorAll("[data-bf-thumbnail-image]").forEach((t=>{t.remove()})),this.thumbnails=t.map(((t,e)=>{const n=this.thumbnailTemplate.cloneNode(!0);let r="IMG"==n.tagName?n:n.querySelector("img");return r||(r=document.createElement("img"),n.appendChild(r)),r.src=t.src,r.alt=t.altText||`Thumbnail ${e+1}`,this.currentIndex===e&&n.classList.add("bf-active"),n.setAttribute("data-image-id",t.id),this.thumbnailsWrapper.appendChild(n),n.addEventListener("click",(()=>{this.updateActiveImage(e)})),n}))):this.thumbnailsWrapper.style.display="none")}updateActiveImage(t){t<0||t>=this.imageElements.length||(this.imageElements.forEach(((e,n)=>{e.style.display=n===t?"":"none"})),this.thumbnails.forEach(((e,n)=>{n===t?e.classList.add("bf-active"):e.classList.remove("bf-active")})),this.currentIndex=t)}}class p extends t{constructor(t,e){super(t,e)}render(){this.container.textContent=this.product.details.title}}class m extends t{moneyFormat;constructor(t,e,n){super(t,e),this.moneyFormat=n,i("product:variant-change",(t=>{t?.productId===this.product.id&&this.render()}))}render(){const t=this.product.selectedVariant;this.container.textContent=e(t.price.amount,t.price.currencyCode,this.moneyFormat)}}function f(t,e){return Array.from(t.querySelectorAll(e)).filter((e=>e.closest("[data-bf-product-id]")===t))}class y{product;container;moneyFormat;renderers=[];constructor(t,e,n){this.product=t,this.container=e,this.moneyFormat=n,e.style.opacity="0",f(e,"[data-bf-product-title]").forEach((e=>{this.renderers.push(new p(t,e))})),f(e,"[data-bf-product-description]").forEach((e=>{this.renderers.push(new l(t,e))})),f(e,"[data-bf-product-price]").forEach((e=>{this.renderers.push(new m(t,e,n))})),f(e,"[data-bf-product-compare-at-price]").forEach((e=>{this.renderers.push(new a(t,e,n))})),f(e,"[data-bf-product-option]").forEach((e=>{this.renderers.push(new d(t,e))})),f(e,"[data-bf-add-to-cart]").forEach((e=>{this.renderers.push(new u(t,e))})),f(e,"[data-bf-product-gallery]").forEach((e=>{this.renderers.push(new h(t,e))}))}render(){this.renderers.forEach((t=>t.render())),this.container.style.opacity="1"}}function g(){const t=window.location.pathname;return/^\/products\/[^\/]+\/?$/.test(t)}class v{id;globalBlink;quantity=1;selectedVariantId;details;constructor(t,e){if(this.id=t,this.globalBlink=e,this.details=this.globalBlink.getProductById(this.id),this.selectedVariantId=this.details.variants.edges[0]?.node.id,!this.details)throw s.error(`Product with id ${this.id} not found`);this.init()}init(){this.updateVariantFromUrl()}updateVariantFromUrl(){if(g()){const t=new URLSearchParams(window.location.search).get("variant");if(t){const e=this.details.variants.edges.find((e=>{return e.node.id===((n=t).startsWith("gid://shopify/ProductVariant/")?n:`gid://shopify/ProductVariant/${n}`);var n}));e&&this.selectVariant(e.node.id)}}}async addToCart(){if(!this.selectedVariantId)throw s.error("No variant selected");await this.globalBlink.cart.add({variantId:this.selectedVariantId,quantity:this.quantity})}selectVariant(t){if(this.selectedVariantId=t,g()){const n=new URL(window.location.href);n.searchParams.set("variant",(e=t).startsWith("gid://shopify/ProductVariant/")?e.split("/").pop()??"":e),window.history.replaceState({},"",n.toString())}var e;r("product:variant-change",{productId:this.id,variantId:t})}updateQuantity(t){this.quantity=t,r("product:quantity-change",{productId:this.id,quantity:t})}get selectedVariant(){return this.details.variants.edges.find((t=>t.node.id===this.selectedVariantId))?.node}}class w{static set(t,e,n){const r=Date.now()+n;localStorage.setItem(t,JSON.stringify({value:e,expires:r}))}static get(t){const e=localStorage.getItem(t);if(!e)return null;try{const{value:n,expires:r}=JSON.parse(e);return Date.now()>r?(localStorage.removeItem(t),null):n}catch{return localStorage.removeItem(t),null}}static remove(t){localStorage.removeItem(t)}}class b{shopifyClient;cacheKey;cacheTTL;currentProducts;constructor(t,e,n){this.shopifyClient=t,this.cacheKey=e,this.cacheTTL=n,this.currentProducts=new Map}async fetchProducts(t){const e=t??Array.from(document.querySelectorAll("[data-bf-product-id]")).map((t=>t.getAttribute("data-bf-product-id"))).filter(Boolean),n=[...new Set(e)],i=new Map(w.get(this.cacheKey)),a=n.filter((t=>!i.has(t)));n.forEach((t=>{i.has(t)&&this.currentProducts.set(t,i.get(t))})),await Promise.all(a.map((async t=>{try{const e=(t=>t.startsWith("gid://shopify/Product/")?t:`gid://shopify/Product/${t}`)(t),n=await this.fetchProduct(e);n&&this.currentProducts.set(t,n)}catch(e){s.error(`Failed to fetch product ${t}:`,e)}}))),w.set(this.cacheKey,Array.from(this.currentProducts.entries()),this.cacheTTL),r("products:fetched")}async fetchProduct(t){const e=await this.shopifyClient.executeQuery("\n        query Products($id: ID!) @inContext(language: EN) {\n          node(id: $id) {\n            ... on Product {\n              id\n              title\n              handle\n              description\n              descriptionHtml\n              priceRange {\n                minVariantPrice { amount currencyCode }\n                maxVariantPrice { amount currencyCode }\n              }\n              compareAtPriceRange {\n                minVariantPrice { amount currencyCode }\n                maxVariantPrice { amount currencyCode }\n              }\n              options {\n                name\n                optionValues {\n                  id\n                  name\n                  swatch {\n                    color\n                    image {\n                      id\n                      alt\n                      previewImage {\n                        altText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n              images(first: 100) {\n                edges {\n                  node {\n                    src\n                    altText\n                    id\n                    width\n                    height\n                  }\n                }\n              }\n              collections(first: 250) {\n                edges {\n                  node {\n                    id\n                    title\n                    metafields(identifiers: []) {\n                      id\n                      namespace\n                      key\n                      value\n                      reference {\n                        __typename\n                        ... on MediaImage {\n                          alt\n                          image { url }\n                        }\n                      }\n                      type\n                      description\n                    }\n                    handle\n                    description\n                    descriptionHtml\n                    image { src }\n                  }\n                }\n              }\n              vendor\n              productType\n              tags\n              requiresSellingPlan\n              variants(first: 100) {\n                edges {\n                  node {\n                    id\n                    product { id title vendor }\n                    title\n                    sku\n                    barcode\n                    price { amount currencyCode }\n                    unitPrice { amount currencyCode }\n                    compareAtPrice { amount currencyCode }\n                    image { src altText id width height }\n                    selectedOptions { name value }\n                    availableForSale\n                    currentlyNotInStock\n                    quantityAvailable\n                    product { id title vendor }\n                    metafields(identifiers: []) {\n                      id\n                      namespace\n                      key\n                      value\n                      reference {\n                        __typename\n                        ... on MediaImage {\n                          alt\n                          image { url }\n                        }\n                      }\n                      type\n                      description\n                    }\n                    weight\n                    weightUnit\n                    sellingPlanAllocations(first: 10) {\n                      edges {\n                        node {\n                          sellingPlan {\n                            id\n                            name\n                            description\n                            checkoutCharge { type value }\n                            recurringDeliveries\n                            options { name value }\n                          }\n                          priceAdjustments {\n                            price { amount currencyCode }\n                            compareAtPrice { amount currencyCode }\n                            perDeliveryPrice { amount currencyCode }\n                            unitPrice { amount currencyCode }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              sellingPlanGroups(first: 10) {\n                edges {\n                  node {\n                    appName\n                    name\n                    sellingPlans(first: 10) {\n                      edges {\n                        node {\n                          id\n                          name\n                          description\n                          recurringDeliveries\n                          options { name value }\n                          priceAdjustments {\n                            orderCount\n                            adjustmentValue {\n                              __typename\n                              ... on SellingPlanPercentagePriceAdjustment {\n                                adjustmentPercentage\n                              }\n                              ... on SellingPlanFixedAmountPriceAdjustment {\n                                adjustmentAmount { amount currencyCode }\n                              }\n                              ... on SellingPlanFixedPriceAdjustment {\n                                price { amount currencyCode }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        ",{id:t});return e?.data?.node??null}}const I="\n\tmutation cartLinesRemove($cartId: ID!, $lineIds: [ID!]!) {\n\t\t\tcartLinesRemove(cartId: $cartId, lineIds: $lineIds) {\n\t\t\t\t\tcart { id }\n\t\t\t\t\tuserErrors { field message }\n\t\t\t}\n\t}\n";class C{shopifyClient;cacheKey;cacheTTL;cart;constructor(t,e,n){this.shopifyClient=t,this.cacheKey=e,this.cacheTTL=n}async init(){r("cart:init:started",{cacheKey:this.cacheKey});const t=w.get(this.cacheKey);t?(this.cart=t,s.info("Cart loaded from localStorage:",this.cart),r("cart:init:loaded",{cart:this.cart,source:"cache"})):r("cart:init:empty",{source:"no-cache"}),r("cart:init:completed",{hasCart:!!this.cart})}get isEmpty(){return!this.cart||!this.cart.lines?.edges?.length}get itemCount(){return this.cart?.totalQuantity||0}get subtotal(){return this.cart?.estimatedCost?.subtotalAmount?.amount||"0"}get total(){return this.cart?.estimatedCost?.totalAmount?.amount||"0"}getLineItem(t){if(!this.cart?.lines?.edges)return null;const e=this.cart.lines.edges.find((e=>e.node.id===t));return e?.node||null}hasVariant(t){return!!this.cart?.lines?.edges&&this.cart.lines.edges.some((e=>e.node.merchandise.id===t))}async create(t,e){r("cart:create:started",{variantId:t,quantity:e});const n={input:{lines:[{quantity:e,merchandiseId:t}]}};try{const i=await this.shopifyClient.executeQuery("\n\tmutation cartCreate($input: CartInput!) {\n\t\t\tcartCreate(input: $input) {\n\t\t\t\tcart {\n\t\t\t\t\tid\n\t\t\t}\n\t\t\tuserErrors {\n\t\t\t\t\tfield\n\t\t\t\t\tmessage\n\t\t\t}\n\t\t\t}\n\t}\n",n);if(i.userErrors&&i.userErrors.length>0)throw s.error("Shopify user errors:",i.userErrors);return r("cart:create:completed",{cartId:i.data.cartCreate.cart.id,variantId:t,quantity:e}),i.data.cartCreate.cart}catch(n){throw r("cart:create:error",{variantId:t,quantity:e,error:n}),n}}async addToExisting(t,e){r("cart:addToExisting:started",{variantId:t,quantity:e,cartId:this.cart.id});const n={cartId:this.cart.id,lines:[{quantity:e,merchandiseId:t}]};try{const i=await this.shopifyClient.executeQuery("\n\tmutation cartLinesAdd($cartId: ID!, $lines: [CartLineInput!]!) {\n\t\t\tcartLinesAdd(cartId: $cartId, lines: $lines) {\n\t\t\tcart {\n\t\t\t\t\tid\n\t\t\t}\n\t\t\tuserErrors {\n\t\t\t\t\tfield\n\t\t\t\t\tmessage\n\t\t\t}\n\t\t\t}\n\t}\n",n);if(i.data.cartLinesAdd.userErrors&&i.data.cartLinesAdd.userErrors.length>0)throw s.error("Shopify user errors:",i.data.cartLinesAdd.userErrors);return r("cart:addToExisting:completed",{variantId:t,quantity:e,cartId:this.cart.id}),i.data.cartLinesAdd.cart}catch(n){throw r("cart:addToExisting:error",{variantId:t,quantity:e,error:n}),s.error("Error adding to existing cart:",n),n}}async fetch(t){r("cart:fetch:started",{cartId:t});const e={cartId:t};try{const n=await this.shopifyClient.executeQuery("\n\tquery getCart($cartId: ID!) {\n\tcart(id: $cartId) {\n\t\t\tid\n\t\t\tcheckoutUrl\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\ttotalQuantity\n\n\t\t\tlines(first: 50) {\n\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tquantity\n\t\t\t\t\tattributes {\n\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t\tcost {\n\t\t\t\t\t\t\tamountPerQuantity {\n\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttotalAmount {\n\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmerchandise {\n\t\t\t\t\t\t\t... on ProductVariant {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\tsku\n\t\t\t\t\t\t\tavailableForSale\n\t\t\t\t\t\t\tquantityAvailable\n\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprice {\n\t\t\t\t\t\t\t\t\tamount\n\t\t\t\t\t\t\t\t\tcurrencyCode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tproduct {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t\t\tvendor\n\t\t\t\t\t\t\t\t\tfeaturedImage {\n\t\t\t\t\t\t\t\t\turl\n\t\t\t\t\t\t\t\t\taltText\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsellingPlanAllocation {\n\t\t\t\t\t\t\tsellingPlan {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\toptions {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\n\t\t\testimatedCost {\n\t\t\tsubtotalAmount {\n\t\t\t\t\tamount\n\t\t\t\t\tcurrencyCode\n\t\t\t}\n\t\t\ttotalAmount {\n\t\t\t\t\tamount\n\t\t\t\t\tcurrencyCode\n\t\t\t}\n\t\t\ttotalTaxAmount {\n\t\t\t\t\tamount\n\t\t\t\t\tcurrencyCode\n\t\t\t}\n\t\t\t}\n\t}\n\t}\n",e);if(n.errors)throw s.error("Shopify errors:",n.errors);return r("cart:fetch:completed",{cartId:t,cart:n.data.cart}),n.data.cart}catch(e){return r("cart:fetch:error",{cartId:t,error:e}),s.error("Error fetching cart:",e),null}}handleShopifyErrors(t,e){if(t&&t.length>0){const n=t.map((t=>t.message)).join(", ");throw s.error(`${e} failed: ${n}`,t)}}async clear(){if(!(this.cart&&this.cart.lines&&this.cart.lines.edges.length>0))return void s.error("No cart to clear");const t=this.cart.lines.edges.map((t=>t.node.id));if(t.length>0){const e={cartId:this.cart.id,lineIds:t};r("cart:clear:started",{lineIds:t});try{const n=await this.shopifyClient.executeQuery(I,e);this.handleShopifyErrors(n.data?.cartLinesRemove?.userErrors,"Clear cart"),r("cart:clear:completed",{lineIds:t})}catch(t){s.error("Error clearing cart:",t),r("cart:clear:error",{error:t})}}await this.refresh()}async removeLineItem(t){if(!this.cart)throw s.error("No cart to remove item from");r("cart:removeLineItem:started",{lineId:t});try{const e={cartId:this.cart.id,lineIds:[t]},n=await this.shopifyClient.executeQuery(I,e);this.handleShopifyErrors(n.data?.cartLinesRemove?.userErrors,"Remove line item"),r("cart:removeLineItem:completed",{lineId:t})}catch(e){r("cart:removeLineItem:error",{lineId:t,error:e}),s.error("Error removing line item:",e)}await this.refresh()}async refresh(){r("cart:refresh:started",{cartId:this.cart.id});try{this.cart=await this.fetch(this.cart.id),w.set(this.cacheKey,this.cart,this.cacheTTL),r("cart:refresh:completed",{cart:this.cart})}catch(t){throw r("cart:refresh:error",{cartId:this.cart.id,error:t}),t}}async add({variantId:t,quantity:e=1}){r("cart:add:started",{variantId:t,quantity:e});try{this.cart?(await this.addToExisting(t,e),await this.refresh()):this.cart=await this.create(t,e)}catch(n){throw r("cart:add:error",{variantId:t,quantity:e,error:n}),n}r("cart:add:completed",{cart:this.cart,variantId:t,quantity:e})}async updateLineItemQuantity(t,e){if(!this.cart)throw s.error("No cart to update item in");if(e<=0)return this.removeLineItem(t);r("cart:updateQuantity:started",{lineId:t,quantity:e});try{const n={cartId:this.cart.id,lines:[{id:t,quantity:e}]},i=await this.shopifyClient.executeQuery("\n\tmutation cartLinesUpdate($cartId: ID!, $lines: [CartLineUpdateInput!]!) {\n\t\tcartLinesUpdate(cartId: $cartId, lines: $lines) {\n\t\t\tcart { id }\n\t\t\tuserErrors { field message }\n\t\t}\n\t}\n",n);this.handleShopifyErrors(i.data?.cartLinesUpdate?.userErrors,"Update quantity"),await this.refresh(),r("cart:updateQuantity:completed",{lineId:t,quantity:e})}catch(n){throw r("cart:updateQuantity:error",{lineId:t,quantity:e,error:n}),n}}}class E{config;cart;shopifyClient;productManager;store;ready;constructor(){this.config=function(){const t=document.querySelector('script[data-name="blink-main-script"]');if(!t)throw s.error("Script not found");const e=t.getAttribute("data-store-token"),n=t.getAttribute("data-store-domain");if(!e||!n)throw s.error("Shopify Token or Store Domain not provided");return{shopify:{token:e,storeDomain:n},cache:{ttl:{default:6e5,products:6e5,store:36e5,cart:864e5},keys:{products:"blink_products",store:"blink_store",cart:"blink_cart"}}}}(),this.shopifyClient=function({token:t,storeDomain:e}){return{executeQuery:async function(n,r={}){if(!t||!e)throw s.error("Shopify instance is not initialized.");const i=`https://${e}/api/2025-04/graphql.json`,a=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json","X-Shopify-Storefront-Access-Token":t},body:JSON.stringify({query:n,variables:r})});if(!a.ok){const t=await a.json().catch((()=>null));throw s.error("Shopify API Error:",t||a.statusText)}return a.json()}}}(this.config.shopify),this.cart=new C(this.shopifyClient,this.config.cache.keys.cart,this.config.cache.ttl.cart),this.productManager=new b(this.shopifyClient,this.config.cache.keys.products,this.config.cache.ttl.products),this.ready=this.init()}async init(){this.store=await async function(t,e,n){const r=w.get(e);if(r&&r.shopName&&r.moneyFormat)return r;s.warn("Invalid cached shop info, fetching fresh.");const i=await t.executeQuery("\n\t{\n\t\t\tshop {\n\t\t\t\t\tname\n\t\t\t\t\tmoneyFormat\n\t\t\t}\n\t}\n\t");if(!i?.data?.shop)throw s.error("Failed to fetch shop details from Shopify");const a={shopName:i.data.shop.name,moneyFormat:i.data.shop.moneyFormat};return w.set(e,a,n),a}(this.shopifyClient,this.config.cache.keys.store,this.config.cache.ttl.store),await this.productManager.fetchProducts()}get products(){return this.productManager.currentProducts}getProductById(t){return this.productManager.currentProducts.get(t)}}document.addEventListener("DOMContentLoaded",(async()=>{window.Blink||(window.Blink=new E);try{await window.Blink.ready,t=window.Blink,document.querySelectorAll("[data-bf-product-id]").forEach((e=>{const n=e.dataset.bfProductId;if(!n||"{{ Connect Your Shopify Product ID }}"==n)return;const r=new v(n,t),i=new y(r,e,t.store.moneyFormat??"${{amount}}");i.render(),e._product=r,e._productRenderer=i}))}catch(t){s.error("Failed to initialize GlobalBlink or products",t)}var t}))})()})();